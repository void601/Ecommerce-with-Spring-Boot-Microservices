spring.application.name=API-Gateway
server.port=8080

#Eureka
#We want to fetch the registry
eureka.client.fetch-registry=true
#we want to register it
eureka.client.register-with-eureka=true
#registry url
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Spring Cloud Gateway Configuration
spring.cloud.gateway.routes[0].id=USER-SERVICE
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

spring.cloud.gateway.routes[1].id=PRODUCT-SERVICE
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/products/**

spring.cloud.gateway.routes[2].id=CART-SERVICE
spring.cloud.gateway.routes[2].uri=http://localhost:8084
spring.cloud.gateway.routes[2].predicates[0]=Path=/cart/**

spring.cloud.gateway.routes[3].id=ORDER-SERVICE
spring.cloud.gateway.routes[3].uri=http://localhost:8085
spring.cloud.gateway.routes[3].predicates[0]=Path=/orders/**

spring.cloud.gateway.routes[4].id=INVENTORY-SERVICE
spring.cloud.gateway.routes[4].uri=http://localhost:8090
spring.cloud.gateway.routes[4].predicates[0]=Path=/inventory/**

#Zipkin
management.tracing.sampling.probability=1.0
spring.zipkin.base-url=http://localhost:9411

#Logging
#logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG

# JWT Validation (User Service as the issuer)
# Ensures tokens are issued by User Service
#Use this if user service is oauth2 provider and standalone application, not in eureka
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://USER-SERVICE
#spring.security.oauth2.resourceserver.jwt.secret-key=N2zQwPmjJbNLO4Ro4H8N1Ufy2t9mC4D1Fq6gSzEVg0U=


e
